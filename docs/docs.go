// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/appointment": {
            "post": {
                "description": "Create an appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "Create appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Appointment",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateAppointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/appointment/{id}": {
            "get": {
                "description": "Get an appointment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "Get appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "description": "Delete an appointment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "Delete appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an appointment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "Update appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Appointment",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateAppointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/branch": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Create branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Branch",
                        "name": "branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateBranch"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DTO.Branch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/branch/name/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a branch by its name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Get branch by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Branch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/branch/{branch_id}/employee/{employee_id}/services": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all services of an employee included in the branch ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Get employee services included in the branch ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/branch/{branch_id}/service/{service_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a service to a branch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Add service to branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Branch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a service from a branch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Remove service from branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Branch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/branch/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a branch by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Get branch by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Branch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a branch by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Delete branch by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Branch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Update branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Branch",
                        "name": "branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.UpdateBranch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Branch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/client": {
            "post": {
                "description": "Create an client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Create client",
                "parameters": [
                    {
                        "description": "Client",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateClient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Client"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/email/{email}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve an client by its email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get client by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Client"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/client/login": {
            "post": {
                "description": "Log in an client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Client",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.LoginClient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/verify-email/{email}/{code}": {
            "post": {
                "description": "Verify an client's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Verify email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Verification Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/client/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an client",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Delete client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Update client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Client",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.Client"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Client"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/client/{id}/appointments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get only the appointments field from a client",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get client appointments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dJSON.ClientAppointment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company": {
            "post": {
                "description": "Create a company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Create company",
                "parameters": [
                    {
                        "description": "Company",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateCompany"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/name/{name}": {
            "get": {
                "description": "Retrieve a company by its name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get company by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/subdomain/{subdomain_name}": {
            "get": {
                "description": "Retrieve a company by its subdomain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get company ID by subdomain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subdomain Name",
                        "name": "subdomain_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.CompanyPublic"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/tax_id/{tax_id}": {
            "get": {
                "description": "Retrieve a company by its tax identification number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get company by tax ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Tax ID",
                        "name": "tax_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/{id}": {
            "get": {
                "description": "Retrieve a company by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get company by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a company by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Delete company by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a company by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Update company by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateCompany"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DTO.Company"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/{id}/design/images": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload and update design images (logo, banner, etc.)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Update company design images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Logo image",
                        "name": "logo",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Banner image",
                        "name": "banner",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Favicon image",
                        "name": "favicon",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Background image",
                        "name": "background",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dJSON.Design"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/company/{id}/design/images/{image_type}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete logo, banner, favicon or background",
                "tags": [
                    "Company"
                ],
                "summary": "Delete a specific company design image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of image to delete (logo, banner, favicon, background)",
                        "name": "image_type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dJSON.Design"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Create employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Employee",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateEmployee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/email/{email}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve an employee by its email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get employee by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/login": {
            "post": {
                "description": "Log in an client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Employee",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.LoginEmployee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/employee/verify-email/{email}/{code}": {
            "post": {
                "description": "Verify an employee's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Verify email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Verification Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/employee/{employee_id}/branch/{branch_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add an employee to a branch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Add employee to branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove an employee from a branch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Remove employee from branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/{employee_id}/service/{service_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a service to an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Add service to employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Employee"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a service from an employee",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Remove service from employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve an employee by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get employee by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an employee by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Delete employee by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Update employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Employee",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.UpdateEmployeeSwagger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/holidays": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a holiday",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Holidays"
                ],
                "summary": "Create holiday",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Holiday",
                        "name": "holiday",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/holidays/name/{name}": {
            "get": {
                "description": "Retrieve a holiday by its name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Holidays"
                ],
                "summary": "Get holiday by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Holiday Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/holidays/{id}": {
            "get": {
                "description": "Retrieve a holiday by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Holidays"
                ],
                "summary": "Get holiday by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Holiday ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a holiday by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Holidays"
                ],
                "summary": "Delete holiday by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Holiday ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a holiday",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Holidays"
                ],
                "summary": "Update holiday",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Holiday ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Holiday",
                        "name": "holiday",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/sector": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a sector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sector"
                ],
                "summary": "Create sector",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "sector",
                        "name": "sector",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/sector/name/{name}": {
            "get": {
                "description": "Retrieve a sector by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sector"
                ],
                "summary": "Get sector by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sector ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sector/{id}": {
            "get": {
                "description": "Retrieve a sector by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sector"
                ],
                "summary": "Get sector by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sector ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a sector by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sector"
                ],
                "summary": "Delete sector by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sector ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a sector by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sector"
                ],
                "summary": "Update sector by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sector ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "sector",
                        "name": "sector",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/service": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Create service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Service",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateService"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DTO.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/service/name/{name}": {
            "get": {
                "description": "Retrieve a service by its name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Get service by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/service/{id}": {
            "get": {
                "description": "Retrieve a service by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Get service by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a service by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Delete service by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a service by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Update service by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "CompanyID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Service",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.Service"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Service"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "DTO.Appointment": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "cancel_time": {
                    "type": "string",
                    "example": "2021-01-01T08:00:00Z"
                },
                "cancelled": {
                    "type": "boolean",
                    "example": false
                },
                "cancelled_employee_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "client_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dJSON.Comment"
                    }
                },
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "employee_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "end_time": {
                    "type": "string",
                    "example": "2021-01-01T10:00:00Z"
                },
                "history": {
                    "$ref": "#/definitions/dJSON.AppointmentHistory"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "is_cancelled": {
                    "type": "boolean",
                    "example": true
                },
                "is_cancelled_by_client": {
                    "type": "boolean",
                    "example": false
                },
                "is_cancelled_by_employee": {
                    "type": "boolean",
                    "example": true
                },
                "is_confirmed_by_client": {
                    "type": "boolean",
                    "example": true
                },
                "is_fulfilled": {
                    "type": "boolean",
                    "example": false
                },
                "payment_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "rescheduled": {
                    "type": "boolean",
                    "example": false
                },
                "service_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "start_time": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                }
            }
        },
        "DTO.Branch": {
            "type": "object",
            "properties": {
                "appointments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.Appointment"
                    }
                },
                "branch_density": {
                    "type": "integer"
                },
                "city": {
                    "type": "string",
                    "example": "New York"
                },
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "complement": {
                    "type": "string",
                    "example": "Suite 100"
                },
                "country": {
                    "type": "string",
                    "example": "USA"
                },
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.EmployeePopulated"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "Main Branch"
                },
                "neighborhood": {
                    "type": "string",
                    "example": "Downtown"
                },
                "number": {
                    "type": "string",
                    "example": "456"
                },
                "service_density": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.ServiceDensity"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.ServicePopulated"
                    }
                },
                "state": {
                    "type": "string",
                    "example": "NY"
                },
                "street": {
                    "type": "string",
                    "example": "123 Main St"
                },
                "zip_code": {
                    "type": "string",
                    "example": "10001"
                }
            }
        },
        "DTO.BranchPopulated": {
            "type": "object",
            "properties": {
                "branch_density": {
                    "type": "integer"
                },
                "city": {
                    "type": "string",
                    "example": "New York"
                },
                "complement": {
                    "type": "string",
                    "example": "Suite 100"
                },
                "country": {
                    "type": "string",
                    "example": "USA"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "Main Branch"
                },
                "neighborhood": {
                    "type": "string",
                    "example": "Downtown"
                },
                "number": {
                    "type": "string",
                    "example": "456"
                },
                "service_density": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.ServiceDensity"
                    }
                },
                "state": {
                    "type": "string",
                    "example": "NY"
                },
                "street": {
                    "type": "string",
                    "example": "123 Main St"
                },
                "zip_code": {
                    "type": "string",
                    "example": "10001"
                }
            }
        },
        "DTO.Client": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "phone": {
                    "type": "string",
                    "example": "+15555555555"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                },
                "verified": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "DTO.Company": {
            "description": "Company Full DTO",
            "type": "object",
            "properties": {
                "branches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.BranchPopulated"
                    }
                },
                "design": {
                    "$ref": "#/definitions/mJSON.DesignConfig"
                },
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.EmployeePopulated"
                    }
                },
                "id": {
                    "description": "Primary key",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "legal_name": {
                    "type": "string",
                    "example": "Your Company Legal Name"
                },
                "sectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.Sector"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.ServicePopulated"
                    }
                },
                "subdomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.Subdomain"
                    }
                },
                "tax_id": {
                    "type": "string",
                    "example": "00000000000000"
                },
                "trading_name": {
                    "type": "string",
                    "example": "Your Company Trading Name"
                }
            }
        },
        "DTO.CompanyPublic": {
            "description": "Company DTO Populated",
            "type": "object",
            "properties": {
                "design": {
                    "$ref": "#/definitions/mJSON.DesignConfig"
                },
                "id": {
                    "description": "Primary key",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "legal_name": {
                    "type": "string",
                    "example": "Your Company Legal Name"
                },
                "sectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.Sector"
                    }
                },
                "subdomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.Subdomain"
                    }
                },
                "tax_id": {
                    "type": "string",
                    "example": "00000000000000"
                },
                "trading_name": {
                    "type": "string",
                    "example": "Your Company Trading Name"
                }
            }
        },
        "DTO.CreateAppointment": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "client_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "employee_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "service_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "start_time": {
                    "type": "string",
                    "example": "2028-01-01T09:00:00Z"
                }
            }
        },
        "DTO.CreateBranch": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "example": "New York"
                },
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "complement": {
                    "type": "string",
                    "example": "Suite 100"
                },
                "country": {
                    "type": "string",
                    "example": "USA"
                },
                "name": {
                    "type": "string",
                    "example": "Main Branch"
                },
                "neighborhood": {
                    "type": "string",
                    "example": "Downtown"
                },
                "number": {
                    "type": "string",
                    "example": "456"
                },
                "state": {
                    "type": "string",
                    "example": "NY"
                },
                "street": {
                    "type": "string",
                    "example": "123 Main St"
                },
                "zip_code": {
                    "type": "string",
                    "example": "10001"
                }
            }
        },
        "DTO.CreateClient": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "password": {
                    "type": "string",
                    "example": "1SecurePswd!"
                },
                "phone": {
                    "type": "string",
                    "example": "+15555555555"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                }
            }
        },
        "DTO.CreateCompany": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Your Company Legal Name"
                },
                "owner_email": {
                    "type": "string",
                    "example": "john.clark@gmail.com"
                },
                "owner_name": {
                    "type": "string",
                    "example": "John"
                },
                "owner_password": {
                    "type": "string",
                    "example": "1SecurePswd!"
                },
                "owner_phone": {
                    "type": "string",
                    "example": "+15555555555"
                },
                "owner_surname": {
                    "type": "string",
                    "example": "Clark"
                },
                "start_subdomain": {
                    "type": "string",
                    "example": "your-company-subdomain"
                },
                "tax_id": {
                    "type": "string",
                    "example": "00000000000000"
                },
                "trading_name": {
                    "type": "string",
                    "example": "Your Company Trading Name"
                }
            }
        },
        "DTO.CreateEmployee": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "joseph.doe@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "Joseph"
                },
                "password": {
                    "type": "string",
                    "example": "1SecurePswd!"
                },
                "phone": {
                    "type": "string",
                    "example": "+15555555551"
                },
                "role": {
                    "type": "string",
                    "example": "client"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                },
                "work_schedule": {
                    "$ref": "#/definitions/DTO.WorkSchedule"
                }
            }
        },
        "DTO.CreateService": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "description": {
                    "type": "string",
                    "example": "A 60-minute in-depth business consultation"
                },
                "duration": {
                    "type": "integer",
                    "example": 60
                },
                "name": {
                    "type": "string",
                    "example": "Premium Consultation"
                },
                "price": {
                    "type": "integer",
                    "example": 150
                }
            }
        },
        "DTO.Employee": {
            "type": "object",
            "properties": {
                "appointments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.Appointment"
                    }
                },
                "branches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.BranchPopulated"
                    }
                },
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "phone": {
                    "type": "string",
                    "example": "+15555555555"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.RolePopulated"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.ServicePopulated"
                    }
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"tag1\"",
                        " \"tag2\"]"
                    ]
                },
                "verified": {
                    "type": "boolean",
                    "example": true
                },
                "work_schedule": {
                    "$ref": "#/definitions/DTO.WorkSchedule"
                }
            }
        },
        "DTO.EmployeePopulated": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "phone": {
                    "type": "string",
                    "example": "+15555555555"
                },
                "role": {
                    "type": "string",
                    "example": "client"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"tag1\"",
                        " \"tag2\"]"
                    ]
                }
            }
        },
        "DTO.ErrorResponse": {
            "description": "Error Response Model",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Not Found"
                }
            }
        },
        "DTO.Holidays": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2025-01-01T00:00:00Z"
                },
                "dayMonth": {
                    "type": "string",
                    "example": "01-01"
                },
                "description": {
                    "type": "string",
                    "example": "Celebration of the first day of the new year"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "New Year's Day"
                },
                "recurrent": {
                    "type": "boolean",
                    "example": true
                },
                "type": {
                    "type": "string",
                    "example": "Public"
                }
            }
        },
        "DTO.LoginClient": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "1SecurePswd!"
                }
            }
        },
        "DTO.LoginEmployee": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "joseph.doe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "1SecurePswd!"
                }
            }
        },
        "DTO.RolePopulated": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "description": {
                    "type": "string",
                    "example": "Administrator role"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "is_system_role": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "DTO.Sector": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "The Company Sector Description"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "Your Company Sector Name"
                }
            }
        },
        "DTO.Service": {
            "type": "object",
            "properties": {
                "branches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.BranchPopulated"
                    }
                },
                "company_id": {
                    "type": "string",
                    "example": "1"
                },
                "description": {
                    "type": "string",
                    "example": "A 60-minute in-depth business consultation"
                },
                "duration": {
                    "type": "integer",
                    "example": 60
                },
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.EmployeePopulated"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "Premium Consultation"
                },
                "price": {
                    "type": "integer",
                    "example": 150
                }
            }
        },
        "DTO.ServiceDensity": {
            "type": "object",
            "properties": {
                "max_schedules_overlap": {
                    "type": "integer",
                    "example": 5
                },
                "service_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "DTO.ServicePopulated": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "A 60-minute in-depth business consultation"
                },
                "duration": {
                    "type": "integer",
                    "example": 60
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "Premium Consultation"
                },
                "price": {
                    "type": "integer",
                    "example": 150
                }
            }
        },
        "DTO.Subdomain": {
            "type": "object",
            "properties": {
                "company_id": {
                    "description": "Foreign key to Company",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "id": {
                    "description": "Primary key",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "description": "Subdomain name",
                    "type": "string",
                    "example": "agenda-yourcompany"
                }
            }
        },
        "DTO.UpdateBranch": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "Main Branch Updated"
                },
                "street": {
                    "type": "string",
                    "example": "556 Main St"
                }
            }
        },
        "DTO.UpdateEmployeeSwagger": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "surname": {
                    "type": "string",
                    "example": "Clark"
                }
            }
        },
        "DTO.WorkRange": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string"
                },
                "end": {
                    "description": "Store as \"18:00:00\"",
                    "type": "string"
                },
                "start": {
                    "description": "Store as \"15:30:00\"",
                    "type": "string"
                }
            }
        },
        "DTO.WorkSchedule": {
            "type": "object",
            "properties": {
                "friday": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.WorkRange"
                    }
                },
                "monday": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.WorkRange"
                    }
                },
                "saturday": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.WorkRange"
                    }
                },
                "sunday": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.WorkRange"
                    }
                },
                "thursday": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.WorkRange"
                    }
                },
                "tuesday": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.WorkRange"
                    }
                },
                "wednesday": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.WorkRange"
                    }
                }
            }
        },
        "dJSON.AppointmentHistory": {
            "type": "object",
            "properties": {
                "field_changes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dJSON.FieldChange"
                    }
                }
            }
        },
        "dJSON.ClientAppointment": {
            "type": "object",
            "properties": {
                "branch_address": {
                    "type": "string",
                    "example": "76, Example street, My city, My country, 09090790"
                },
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "company_name": {
                    "type": "string",
                    "example": "Company name example"
                },
                "service_name": {
                    "type": "string",
                    "example": "Service name example"
                },
                "start_time": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                }
            }
        },
        "dJSON.Colors": {
            "type": "object",
            "properties": {
                "primary": {
                    "type": "string",
                    "example": "#FF5733"
                },
                "quaternary": {
                    "type": "string",
                    "example": "#FF33A1"
                },
                "secondary": {
                    "type": "string",
                    "example": "#33FF57"
                },
                "tertiary": {
                    "type": "string",
                    "example": "#3357FF"
                }
            }
        },
        "dJSON.Comment": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string",
                    "example": "Some comment example text"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                },
                "created_by": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                },
                "from_client": {
                    "type": "boolean",
                    "example": true
                },
                "from_employee": {
                    "type": "boolean",
                    "example": false
                },
                "last_updated_by": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "old_versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dJSON.CommentVersion"
                    }
                },
                "type": {
                    "description": "\"internal\" or \"external\"",
                    "type": "string",
                    "example": "internal"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                }
            }
        },
        "dJSON.CommentVersion": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string",
                    "example": "Some different version comment text"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                },
                "created_by": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "dJSON.Design": {
            "type": "object",
            "properties": {
                "colors": {
                    "$ref": "#/definitions/dJSON.Colors"
                },
                "images": {
                    "$ref": "#/definitions/dJSON.Images"
                }
            }
        },
        "dJSON.FieldChange": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                },
                "field": {
                    "type": "string",
                    "example": "field_name"
                },
                "new_value": {
                    "type": "string",
                    "example": "new_value"
                },
                "old_value": {
                    "type": "string",
                    "example": "old_value"
                },
                "reason": {
                    "type": "string",
                    "example": "Some reason."
                }
            }
        },
        "dJSON.Images": {
            "type": "object",
            "properties": {
                "background_url": {
                    "type": "string",
                    "example": "https://example.com/background.png"
                },
                "banner_url": {
                    "type": "string",
                    "example": "https://example.com/banner.png"
                },
                "favicon_url": {
                    "type": "string",
                    "example": "https://example.com/favicon.png"
                },
                "logo_url": {
                    "type": "string",
                    "example": "https://example.com/logo.png"
                }
            }
        },
        "mJSON.Colors": {
            "type": "object",
            "properties": {
                "primary": {
                    "type": "string"
                },
                "quaternary": {
                    "type": "string"
                },
                "secondary": {
                    "type": "string"
                },
                "tertiary": {
                    "type": "string"
                }
            }
        },
        "mJSON.DesignConfig": {
            "type": "object",
            "properties": {
                "colors": {
                    "$ref": "#/definitions/mJSON.Colors"
                },
                "images": {
                    "$ref": "#/definitions/mJSON.Images"
                }
            }
        },
        "mJSON.Images": {
            "type": "object",
            "properties": {
                "background_url": {
                    "type": "string"
                },
                "banner_url": {
                    "type": "string"
                },
                "favicon_url": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Enter the token in the format: \u003ctoken\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Fiber Example API",
	Description:      "Swagger API for testing and debugging",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
