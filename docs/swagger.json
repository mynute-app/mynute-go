{
    "swagger": "2.0",
    "info": {
        "description": "Swagger API for testing and debugging",
        "title": "GO-Fiber API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/appointment": {
            "post": {
                "description": "Create an appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "Create appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Appointment",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateAppointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/appointment/{id}": {
            "get": {
                "description": "Get an appointment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "Get appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "description": "Delete an appointment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "Delete appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an appointment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "Update appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Appointment",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateAppointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/branch": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Create branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Branch",
                        "name": "branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateBranch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.BranchFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/branch/{branch_id}/employee/{employee_id}/services": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all services of an employee included in the branch ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Get employee services included in the branch ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/branch/{branch_id}/service/{service_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a service to a branch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Add service to branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.BranchFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a service from a branch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Remove service from branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.BranchFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/branch/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a branch by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Get branch by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.BranchFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a branch by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Delete branch by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Update branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Branch",
                        "name": "branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.UpdateBranch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.BranchFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/branch/{id}/design/images": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a branch's images",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Update branch images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Profile image",
                        "name": "profile",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dJSON.Images"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/branch/{id}/design/images/{image_type}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a branch's image",
                "tags": [
                    "Branch"
                ],
                "summary": "Delete branch image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image Type",
                        "name": "image_type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dJSON.Images"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/branch/{id}/work_range/{work_range_id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a branch's work range",
                "tags": [
                    "BranchWorkSchedule"
                ],
                "summary": "Update branch work range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Work Range ID",
                        "name": "work_range_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Work Range",
                        "name": "work_range",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.UpdateWorkRange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.BranchFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a branch's work range",
                "tags": [
                    "BranchWorkSchedule"
                ],
                "summary": "Delete branch work range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Work Range ID",
                        "name": "work_range_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.BranchWorkRange"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/branch/{id}/work_range/{work_range_id}/service/{service_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a service from a branch's work range",
                "tags": [
                    "BranchWorkSchedule"
                ],
                "summary": "Remove service from branch work range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Work Range ID",
                        "name": "work_range_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.BranchFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/branch/{id}/work_range/{work_range_id}/services": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add services to a branch's work range",
                "tags": [
                    "BranchWorkSchedule"
                ],
                "summary": "Add services to branch work range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Work Range ID",
                        "name": "work_range_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Services",
                        "name": "services",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DTO.ServiceID"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.BranchFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/branch/{id}/work_schedule": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a work schedule for a branch",
                "tags": [
                    "BranchWorkSchedule"
                ],
                "summary": "Create work schedule for a branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Branch Work Schedule",
                        "name": "work_schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateBranchWorkSchedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.BranchFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client": {
            "post": {
                "description": "Create an client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Create client",
                "parameters": [
                    {
                        "description": "Client",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateClient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Client"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/email/{email}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve an client by its email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get client by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Client"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/client/login": {
            "post": {
                "description": "Log in an client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Client",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.LoginClient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/verify-email/{email}/{code}": {
            "post": {
                "description": "Verify an client's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Verify email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Verification Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/client/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve an client by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get client by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Client"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an client",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Delete client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Update client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Client",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.Client"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Client"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/client/{id}/appointments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get only the appointments field from a client",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get client appointments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dJSON.ClientAppointment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/{id}/design/images": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the design images of an client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Update client design images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Profile image",
                        "name": "profile",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Client"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/client/{id}/design/images/{image_type}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete the design images of an client",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Delete client design images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image Type",
                        "name": "image_type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dJSON.Images"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/company": {
            "post": {
                "description": "Create a company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Create company",
                "parameters": [
                    {
                        "description": "Company",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateCompany"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.CompanyFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/name/{name}": {
            "get": {
                "description": "Retrieve a company by its name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get company by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.CompanyFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/subdomain/{subdomain_name}": {
            "get": {
                "description": "Retrieve a company by its subdomain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get company ID by subdomain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subdomain Name",
                        "name": "subdomain_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.CompanyBase"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/tax_id/{tax_id}": {
            "get": {
                "description": "Retrieve a company by its tax identification number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get company by tax ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Tax ID",
                        "name": "tax_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.CompanyFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/tax_id/{tax_id}/exists": {
            "get": {
                "description": "Check if a company exists by its tax identification number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Check if company exists by tax ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Tax ID",
                        "name": "tax_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/{id}": {
            "get": {
                "description": "Retrieve a company by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get company by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.CompanyFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a company by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Delete company by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.CompanyFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a company by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Update company by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateCompany"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.CompanyFull"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/{id}/design/colors": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the primary, secondary, tertiary, and quaternary colors of a company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Update company colors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Colors",
                        "name": "colors",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mJSON.Colors"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dJSON.Colors"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/company/{id}/design/images": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload and update design images (logo, banner, etc.)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Update company design images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Logo image",
                        "name": "logo",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Banner image",
                        "name": "banner",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Favicon image",
                        "name": "favicon",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Background image",
                        "name": "background",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dJSON.Images"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/company/{id}/design/images/{image_type}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete logo, banner, favicon or background",
                "tags": [
                    "Company"
                ],
                "summary": "Delete a specific company design image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of image to delete (logo, banner, favicon, background)",
                        "name": "image_type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dJSON.Design"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Create employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Employee",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateEmployee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/email/{email}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve an employee by its email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get employee by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/login": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Log in an client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Employee",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.LoginEmployee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/verify-email/{email}/{code}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Verify an employee's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Verify email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Verification Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/employee/{employee_id}/branch/{branch_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add an employee to a branch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Add employee to branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove an employee from a branch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Remove employee from branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/{employee_id}/service/{service_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a service to an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Add service to employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeFull"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a service from an employee",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Remove service from employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/{employee_id}/work_range/{work_range_id}/service/{service_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a service from an employee's work range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EmployeeWorkSchedule"
                ],
                "summary": "Remove service from employee's work range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Work Range ID",
                        "name": "work_range_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/{employee_id}/work_range/{work_range_id}/services": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add services to an employee's work range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EmployeeWorkSchedule"
                ],
                "summary": "Add services to employee's work range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Work Range ID",
                        "name": "work_range_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Services",
                        "name": "services",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DTO.ServiceID"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve an employee by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get employee by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an employee by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Delete employee by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Update employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Employee",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.UpdateEmployeeSwagger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/{id}/design/images": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the images of an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Update employee images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Profile image",
                        "name": "profile",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dJSON.Images"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/{id}/design/images/{image_type}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an image of an employee",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Delete employee image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image Type (logo, banner, favicon, background)",
                        "name": "image_type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dJSON.Images"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/{id}/work_range/{work_range_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a work range for an employee",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EmployeeWorkSchedule"
                ],
                "summary": "Get work range by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Work Range ID",
                        "name": "work_range_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeWorkRange"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a work range for an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EmployeeWorkSchedule"
                ],
                "summary": "Update work range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Work Range ID",
                        "name": "work_range_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Work Range",
                        "name": "work_range",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.UpdateWorkRange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a work schedule for an employee",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EmployeeWorkSchedule"
                ],
                "summary": "Delete work schedule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Work Range ID",
                        "name": "work_range_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeWorkSchedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employee/{id}/work_schedule": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a work schedule for an employee",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "EmployeeWorkSchedule"
                ],
                "summary": "Create work schedule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Work Schedule",
                        "name": "work_schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateEmployeeWorkSchedule"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.EmployeeWorkSchedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/holidays": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a holiday",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Holidays"
                ],
                "summary": "Create holiday",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Holiday",
                        "name": "holiday",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/holidays/name/{name}": {
            "get": {
                "description": "Retrieve a holiday by its name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Holidays"
                ],
                "summary": "Get holiday by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Holiday Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/holidays/{id}": {
            "get": {
                "description": "Retrieve a holiday by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Holidays"
                ],
                "summary": "Get holiday by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Holiday ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a holiday by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Holidays"
                ],
                "summary": "Delete holiday by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Holiday ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a holiday",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Holidays"
                ],
                "summary": "Update holiday",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Holiday ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Holiday",
                        "name": "holiday",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Holidays"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/schedule/options": {
            "get": {
                "description": "Retrieve schedule options based on filters like branch, employee, service, and time.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "summary": "Get schedule options",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by branch ID",
                        "name": "branch_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by employee ID",
                        "name": "employee_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by service ID",
                        "name": "service_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Specify what to retrieve: 'services', 'branches', 'employees', or 'time_slots'",
                        "name": "get",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sector": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a sector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sector"
                ],
                "summary": "Create sector",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "sector",
                        "name": "sector",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/sector/name/{name}": {
            "get": {
                "description": "Retrieve a sector by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sector"
                ],
                "summary": "Get sector by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sector ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sector/{id}": {
            "get": {
                "description": "Retrieve a sector by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sector"
                ],
                "summary": "Get sector by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sector ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a sector by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sector"
                ],
                "summary": "Delete sector by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sector ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a sector by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sector"
                ],
                "summary": "Update sector by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sector ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "sector",
                        "name": "sector",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Sector"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/service": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Create service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Service",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.CreateService"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/service/name/{name}": {
            "get": {
                "description": "Retrieve a service by its name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Get service by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/service/{id}": {
            "get": {
                "description": "Retrieve a service by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Get service by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a service by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Delete service by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a service by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Update service by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Service",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DTO.Service"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DTO.Service"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/service/{id}/design/images": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update images of a service",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Update service images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dJSON.Images"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/service/{id}/design/images/{image_type}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete images of a service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Delete service images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-Auth-Token",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X-Company-ID",
                        "name": "X-Company-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dJSON.Images"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/DTO.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "definitions": {
        "DTO.Appointment": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "cancel_time": {
                    "type": "string",
                    "example": "2021-01-01T08:00:00Z"
                },
                "cancelled": {
                    "type": "boolean",
                    "example": false
                },
                "cancelled_employee_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "client_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dJSON.Comment"
                    }
                },
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "employee_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "end_time": {
                    "type": "string",
                    "example": "2021-01-01T10:00:00Z"
                },
                "history": {
                    "$ref": "#/definitions/dJSON.AppointmentHistory"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "is_cancelled": {
                    "type": "boolean",
                    "example": true
                },
                "is_cancelled_by_client": {
                    "type": "boolean",
                    "example": false
                },
                "is_cancelled_by_employee": {
                    "type": "boolean",
                    "example": true
                },
                "is_confirmed_by_client": {
                    "type": "boolean",
                    "example": true
                },
                "is_fulfilled": {
                    "type": "boolean",
                    "example": false
                },
                "payment_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "rescheduled": {
                    "type": "boolean",
                    "example": false
                },
                "service_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "start_time": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                },
                "time_zone": {
                    "type": "string",
                    "example": "America/New_York"
                }
            }
        },
        "DTO.BranchBase": {
            "description": "Branch Base DTO",
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "example": "New York"
                },
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "complement": {
                    "type": "string",
                    "example": "Suite 100"
                },
                "country": {
                    "type": "string",
                    "example": "USA"
                },
                "design": {
                    "$ref": "#/definitions/mJSON.DesignConfig"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "Main Branch"
                },
                "neighborhood": {
                    "type": "string",
                    "example": "Downtown"
                },
                "number": {
                    "type": "string",
                    "example": "456"
                },
                "state": {
                    "type": "string",
                    "example": "NY"
                },
                "street": {
                    "type": "string",
                    "example": "123 Main St"
                },
                "time_zone": {
                    "description": "Time zone in IANA format",
                    "type": "string",
                    "example": "America/New_York"
                },
                "zip_code": {
                    "type": "string",
                    "example": "10001"
                }
            }
        },
        "DTO.BranchFull": {
            "description": "Branch Full DTO",
            "type": "object",
            "properties": {
                "appointments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.Appointment"
                    }
                },
                "branch_density": {
                    "type": "integer"
                },
                "city": {
                    "type": "string",
                    "example": "New York"
                },
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "complement": {
                    "type": "string",
                    "example": "Suite 100"
                },
                "country": {
                    "type": "string",
                    "example": "USA"
                },
                "design": {
                    "$ref": "#/definitions/mJSON.DesignConfig"
                },
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.EmployeeBase"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "Main Branch"
                },
                "neighborhood": {
                    "type": "string",
                    "example": "Downtown"
                },
                "number": {
                    "type": "string",
                    "example": "456"
                },
                "service_density": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.ServiceDensity"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.ServiceBase"
                    }
                },
                "state": {
                    "type": "string",
                    "example": "NY"
                },
                "street": {
                    "type": "string",
                    "example": "123 Main St"
                },
                "time_zone": {
                    "description": "Time zone in IANA format",
                    "type": "string",
                    "example": "America/New_York"
                },
                "zip_code": {
                    "type": "string",
                    "example": "10001"
                }
            }
        },
        "DTO.BranchWorkRange": {
            "description": "represents a work range for a branch, including its ID and the data required to create it.",
            "type": "object",
            "properties": {
                "branch_id": {
                    "description": "Branch ID",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "end_time": {
                    "description": "End time (date ignored)",
                    "type": "string",
                    "format": "HH:mm",
                    "example": "17:00"
                },
                "id": {
                    "description": "Work range ID",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "services": {
                    "description": "List of services associated with the work range",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "start_time": {
                    "description": "Start time (date ignored)",
                    "type": "string",
                    "format": "HH:mm",
                    "example": "09:00"
                },
                "time_zone": {
                    "description": "Timezone in IANA format, e.g., \"America/New_York\"",
                    "type": "string",
                    "example": "America/New_York"
                },
                "weekday": {
                    "description": "Weekday (0 = Sunday, 1 = Monday, ..., 6 = Saturday)",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "DTO.Client": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "phone": {
                    "type": "string",
                    "example": "+15555555555"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                },
                "verified": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "DTO.CompanyBase": {
            "description": "Company Base DTO",
            "type": "object",
            "properties": {
                "design": {
                    "$ref": "#/definitions/mJSON.DesignConfig"
                },
                "id": {
                    "description": "Primary key",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "legal_name": {
                    "type": "string",
                    "example": "Your Company Legal Name"
                },
                "sectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.Sector"
                    }
                },
                "subdomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.Subdomain"
                    }
                },
                "tax_id": {
                    "type": "string",
                    "example": "00000000000000"
                },
                "trading_name": {
                    "type": "string",
                    "example": "Your Company Trading Name"
                }
            }
        },
        "DTO.CompanyFull": {
            "description": "Company Full DTO",
            "type": "object",
            "properties": {
                "branches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.BranchBase"
                    }
                },
                "design": {
                    "$ref": "#/definitions/mJSON.DesignConfig"
                },
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.EmployeeBase"
                    }
                },
                "id": {
                    "description": "Primary key",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "legal_name": {
                    "type": "string",
                    "example": "Your Company Legal Name"
                },
                "sectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.Sector"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.ServiceBase"
                    }
                },
                "subdomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.Subdomain"
                    }
                },
                "tax_id": {
                    "type": "string",
                    "example": "00000000000000"
                },
                "trading_name": {
                    "type": "string",
                    "example": "Your Company Trading Name"
                }
            }
        },
        "DTO.CreateAppointment": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "client_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "employee_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "service_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "start_time": {
                    "type": "string",
                    "example": "2028-01-01T09:00:00Z"
                },
                "time_zone": {
                    "description": "Timezone in IANA format, e.g., \"America/New_York\"",
                    "type": "string",
                    "example": "America/New_York"
                }
            }
        },
        "DTO.CreateBranch": {
            "description": "Branch Create DTO",
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "example": "New York"
                },
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "complement": {
                    "type": "string",
                    "example": "Suite 100"
                },
                "country": {
                    "type": "string",
                    "example": "USA"
                },
                "name": {
                    "type": "string",
                    "example": "Main Branch"
                },
                "neighborhood": {
                    "type": "string",
                    "example": "Downtown"
                },
                "number": {
                    "type": "string",
                    "example": "456"
                },
                "state": {
                    "type": "string",
                    "example": "NY"
                },
                "street": {
                    "type": "string",
                    "example": "123 Main St"
                },
                "time_zone": {
                    "description": "Time zone in IANA format",
                    "type": "string",
                    "example": "America/New_York"
                },
                "zip_code": {
                    "type": "string",
                    "example": "10001"
                }
            }
        },
        "DTO.CreateBranchWorkRange": {
            "description": "represents the data required to create a work range for a branch.",
            "type": "object",
            "properties": {
                "branch_id": {
                    "description": "Branch ID",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "end_time": {
                    "description": "End time (date ignored)",
                    "type": "string",
                    "format": "HH:mm",
                    "example": "17:00"
                },
                "services": {
                    "description": "List of services associated with the work range",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "start_time": {
                    "description": "Start time (date ignored)",
                    "type": "string",
                    "format": "HH:mm",
                    "example": "09:00"
                },
                "time_zone": {
                    "description": "Timezone in IANA format, e.g., \"America/New_York\"",
                    "type": "string",
                    "example": "America/New_York"
                },
                "weekday": {
                    "description": "Weekday (0 = Sunday, 1 = Monday, ..., 6 = Saturday)",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "DTO.CreateBranchWorkSchedule": {
            "description": "represents the data required to create a work schedule for a branch.",
            "type": "object",
            "properties": {
                "branch_work_ranges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.CreateBranchWorkRange"
                    }
                }
            }
        },
        "DTO.CreateClient": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "password": {
                    "type": "string",
                    "example": "1SecurePswd!"
                },
                "phone": {
                    "type": "string",
                    "example": "+15555555555"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                }
            }
        },
        "DTO.CreateCompany": {
            "type": "object",
            "required": [
                "owner_email",
                "owner_password",
                "owner_phone",
                "owner_time_zone",
                "start_subdomain"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Your Company Legal Name"
                },
                "owner_email": {
                    "type": "string",
                    "example": "john.clark@gmail.com"
                },
                "owner_name": {
                    "type": "string",
                    "example": "John"
                },
                "owner_password": {
                    "type": "string",
                    "example": "1SecurePswd!"
                },
                "owner_phone": {
                    "type": "string",
                    "example": "+15555555555"
                },
                "owner_surname": {
                    "type": "string",
                    "example": "Clark"
                },
                "owner_time_zone": {
                    "description": "Use a valid timezone",
                    "type": "string",
                    "example": "America/Sao_Paulo"
                },
                "start_subdomain": {
                    "type": "string",
                    "example": "your-company-subdomain"
                },
                "tax_id": {
                    "type": "string",
                    "example": "00000000000000"
                },
                "trading_name": {
                    "type": "string",
                    "example": "Your Company Trading Name"
                }
            }
        },
        "DTO.CreateEmployee": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "joseph.doe@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "Joseph"
                },
                "password": {
                    "type": "string",
                    "example": "1SecurePswd!"
                },
                "phone": {
                    "type": "string",
                    "example": "+15555555551"
                },
                "role": {
                    "type": "string",
                    "example": "client"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                },
                "time_zone": {
                    "description": "Use a valid timezone",
                    "type": "string",
                    "example": "America/Sao_Paulo"
                }
            }
        },
        "DTO.CreateEmployeeWorkRange": {
            "description": "represents the data required to create a work range for an employee.",
            "type": "object",
            "properties": {
                "branch_id": {
                    "description": "Branch ID",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "employee_id": {
                    "description": "Employee ID",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "end_time": {
                    "description": "End time (date ignored)",
                    "type": "string",
                    "format": "HH:mm",
                    "example": "17:00"
                },
                "services": {
                    "description": "List of services associated with the work range",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "start_time": {
                    "description": "Start time (date ignored)",
                    "type": "string",
                    "format": "HH:mm",
                    "example": "09:00"
                },
                "time_zone": {
                    "description": "Timezone in IANA format, e.g., \"America/New_York\"",
                    "type": "string",
                    "example": "America/New_York"
                },
                "weekday": {
                    "description": "Weekday (0 = Sunday, 1 = Monday, ..., 6 = Saturday)",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "DTO.CreateEmployeeWorkSchedule": {
            "description": "represents the data required to create a work schedule for an employee.",
            "type": "object",
            "properties": {
                "employee_work_ranges": {
                    "description": "List of work ranges for the employee",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.CreateEmployeeWorkRange"
                    }
                }
            }
        },
        "DTO.CreateService": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "description": {
                    "type": "string",
                    "example": "A 60-minute in-depth business consultation"
                },
                "duration": {
                    "type": "integer",
                    "example": 60
                },
                "name": {
                    "type": "string",
                    "example": "Premium Consultation"
                },
                "price": {
                    "type": "integer",
                    "example": 150
                }
            }
        },
        "DTO.EmployeeBase": {
            "description": "Employee Base DTO",
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "phone": {
                    "type": "string",
                    "example": "+15555555555"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                }
            }
        },
        "DTO.EmployeeFull": {
            "description": "Employee Full DTO",
            "type": "object",
            "properties": {
                "appointments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.Appointment"
                    }
                },
                "branches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.BranchBase"
                    }
                },
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "design": {
                    "$ref": "#/definitions/mJSON.DesignConfig"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "phone": {
                    "type": "string",
                    "example": "+15555555555"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.RolePopulated"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.ServiceBase"
                    }
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                },
                "verified": {
                    "type": "boolean",
                    "example": true
                },
                "work_schedule": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.EmployeeWorkRange"
                    }
                }
            }
        },
        "DTO.EmployeeWorkRange": {
            "description": "represents a work range for an employee, including its ID and the data required to create it.",
            "type": "object",
            "properties": {
                "branch_id": {
                    "description": "Branch ID",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "employee_id": {
                    "description": "Employee ID",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "end_time": {
                    "description": "End time (date ignored)",
                    "type": "string",
                    "format": "HH:mm",
                    "example": "17:00"
                },
                "id": {
                    "description": "Work range ID",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "services": {
                    "description": "List of services associated with the work range",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "start_time": {
                    "description": "Start time (date ignored)",
                    "type": "string",
                    "format": "HH:mm",
                    "example": "09:00"
                },
                "time_zone": {
                    "description": "Timezone in IANA format, e.g., \"America/New_York\"",
                    "type": "string",
                    "example": "America/New_York"
                },
                "weekday": {
                    "description": "Weekday (0 = Sunday, 1 = Monday, ..., 6 = Saturday)",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "DTO.EmployeeWorkSchedule": {
            "description": "represents a work schedule for an employee, which is a collection of work ranges.",
            "type": "object",
            "properties": {
                "employee_work_ranges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.EmployeeWorkRange"
                    }
                }
            }
        },
        "DTO.ErrorResponse": {
            "description": "Error Response Model",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Not Found"
                }
            }
        },
        "DTO.Holidays": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2025-01-01T00:00:00Z"
                },
                "dayMonth": {
                    "type": "string",
                    "example": "01-01"
                },
                "description": {
                    "type": "string",
                    "example": "Celebration of the first day of the new year"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "New Year's Day"
                },
                "recurrent": {
                    "type": "boolean",
                    "example": true
                },
                "type": {
                    "type": "string",
                    "example": "Public"
                }
            }
        },
        "DTO.LoginClient": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "1SecurePswd!"
                }
            }
        },
        "DTO.LoginEmployee": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.clark@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "1SecurePswd!"
                }
            }
        },
        "DTO.RolePopulated": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "description": {
                    "type": "string",
                    "example": "Administrator role"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "is_system_role": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "DTO.Sector": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "The Company Sector Description"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "Your Company Sector Name"
                }
            }
        },
        "DTO.Service": {
            "description": "Service Full DTO",
            "type": "object",
            "properties": {
                "branches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.BranchBase"
                    }
                },
                "company_id": {
                    "type": "string",
                    "example": "1"
                },
                "description": {
                    "type": "string",
                    "example": "A 60-minute in-depth business consultation"
                },
                "design": {
                    "$ref": "#/definitions/mJSON.DesignConfig"
                },
                "duration": {
                    "type": "integer",
                    "example": 60
                },
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DTO.EmployeeBase"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "Premium Consultation"
                },
                "price": {
                    "type": "integer",
                    "example": 150
                }
            }
        },
        "DTO.ServiceBase": {
            "description": "Service Base DTO",
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string",
                    "example": "1"
                },
                "description": {
                    "type": "string",
                    "example": "A 60-minute in-depth business consultation"
                },
                "design": {
                    "$ref": "#/definitions/mJSON.DesignConfig"
                },
                "duration": {
                    "type": "integer",
                    "example": 60
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "Premium Consultation"
                },
                "price": {
                    "type": "integer",
                    "example": 150
                }
            }
        },
        "DTO.ServiceDensity": {
            "type": "object",
            "properties": {
                "max_schedules_overlap": {
                    "type": "integer",
                    "example": 5
                },
                "service_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "DTO.ServiceID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "DTO.Subdomain": {
            "type": "object",
            "properties": {
                "company_id": {
                    "description": "Foreign key to Company",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "id": {
                    "description": "Primary key",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "description": "Subdomain name",
                    "type": "string",
                    "example": "agenda-yourcompany"
                }
            }
        },
        "DTO.UpdateBranch": {
            "description": "Branch Update DTO",
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "Main Branch Updated"
                },
                "street": {
                    "type": "string",
                    "example": "556 Main St"
                }
            }
        },
        "DTO.UpdateEmployeeSwagger": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "surname": {
                    "type": "string",
                    "example": "Clark"
                }
            }
        },
        "DTO.UpdateWorkRange": {
            "type": "object",
            "properties": {
                "end_time": {
                    "description": "End time (date ignored)",
                    "type": "string",
                    "format": "HH:mm",
                    "example": "17:00"
                },
                "start_time": {
                    "description": "Start time (date ignored)",
                    "type": "string",
                    "format": "HH:mm",
                    "example": "09:00"
                },
                "time_zone": {
                    "description": "Timezone in IANA format, e.g., \"America/New_York\"",
                    "type": "string",
                    "example": "America/New_York"
                },
                "weekday": {
                    "description": "Weekday (0 = Sunday, 1 = Monday, ..., 6 = Saturday)",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dJSON.AppointmentHistory": {
            "type": "object",
            "properties": {
                "field_changes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dJSON.FieldChange"
                    }
                }
            }
        },
        "dJSON.ClientAppointment": {
            "type": "object",
            "properties": {
                "branch_address": {
                    "type": "string",
                    "example": "76, Example street, My city, My country, 09090790"
                },
                "company_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "company_name": {
                    "type": "string",
                    "example": "Company name example"
                },
                "service_name": {
                    "type": "string",
                    "example": "Service name example"
                },
                "start_time": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                }
            }
        },
        "dJSON.Colors": {
            "type": "object",
            "properties": {
                "primary": {
                    "type": "string",
                    "example": "#FF5733"
                },
                "quaternary": {
                    "type": "string",
                    "example": "#FF33A1"
                },
                "secondary": {
                    "type": "string",
                    "example": "#33FF57"
                },
                "tertiary": {
                    "type": "string",
                    "example": "#3357FF"
                }
            }
        },
        "dJSON.Comment": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string",
                    "example": "Some comment example text"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                },
                "created_by": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                },
                "from_client": {
                    "type": "boolean",
                    "example": true
                },
                "from_employee": {
                    "type": "boolean",
                    "example": false
                },
                "last_updated_by": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "old_versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dJSON.CommentVersion"
                    }
                },
                "type": {
                    "description": "\"internal\" or \"external\"",
                    "type": "string",
                    "example": "internal"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                }
            }
        },
        "dJSON.CommentVersion": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string",
                    "example": "Some different version comment text"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                },
                "created_by": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "dJSON.Design": {
            "type": "object",
            "properties": {
                "colors": {
                    "$ref": "#/definitions/dJSON.Colors"
                },
                "images": {
                    "$ref": "#/definitions/dJSON.Images"
                }
            }
        },
        "dJSON.FieldChange": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T09:00:00Z"
                },
                "field": {
                    "type": "string",
                    "example": "field_name"
                },
                "new_value": {
                    "type": "string",
                    "example": "new_value"
                },
                "old_value": {
                    "type": "string",
                    "example": "old_value"
                },
                "reason": {
                    "type": "string",
                    "example": "Some reason."
                }
            }
        },
        "dJSON.Image": {
            "type": "object",
            "properties": {
                "alt": {
                    "type": "string",
                    "example": "Image of something"
                },
                "caption": {
                    "type": "string",
                    "example": "This is the image we talk about"
                },
                "title": {
                    "type": "string",
                    "example": "Title of this image"
                },
                "url": {
                    "type": "string",
                    "example": "https://example.com/image.png"
                }
            }
        },
        "dJSON.Images": {
            "type": "object",
            "properties": {
                "background": {
                    "$ref": "#/definitions/dJSON.Image"
                },
                "banner": {
                    "$ref": "#/definitions/dJSON.Image"
                },
                "favicon": {
                    "$ref": "#/definitions/dJSON.Image"
                },
                "logo": {
                    "$ref": "#/definitions/dJSON.Image"
                },
                "profile": {
                    "$ref": "#/definitions/dJSON.Image"
                }
            }
        },
        "mJSON.Colors": {
            "type": "object",
            "properties": {
                "primary": {
                    "type": "string"
                },
                "quaternary": {
                    "type": "string"
                },
                "secondary": {
                    "type": "string"
                },
                "tertiary": {
                    "type": "string"
                }
            }
        },
        "mJSON.DesignConfig": {
            "type": "object",
            "properties": {
                "colors": {
                    "$ref": "#/definitions/mJSON.Colors"
                },
                "images": {
                    "$ref": "#/definitions/mJSON.Images"
                }
            }
        },
        "mJSON.Image": {
            "type": "object",
            "properties": {
                "alt": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "mJSON.Images": {
            "type": "object",
            "properties": {
                "background": {
                    "$ref": "#/definitions/mJSON.Image"
                },
                "banner": {
                    "$ref": "#/definitions/mJSON.Image"
                },
                "favicon": {
                    "$ref": "#/definitions/mJSON.Image"
                },
                "logo": {
                    "$ref": "#/definitions/mJSON.Image"
                },
                "profile": {
                    "$ref": "#/definitions/mJSON.Image"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Enter the token in the format: \u003ctoken\u003e\nEnter the company ID in the format: \u003ccompany_id\u003e",
            "type": "apiKey",
            "name": "X-Company-ID",
            "in": "header"
        }
    }
}